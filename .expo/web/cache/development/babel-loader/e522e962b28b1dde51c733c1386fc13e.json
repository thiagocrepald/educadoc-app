{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"onPress\", \"onLongPress\", \"onPressIn\", \"onPressOut\", \"to\", \"accessibilityRole\"],\n    _excluded2 = [\"icon\", \"label\", \"labelStyle\", \"to\", \"focused\", \"allowFontScaling\", \"activeTintColor\", \"inactiveTintColor\", \"activeBackgroundColor\", \"inactiveBackgroundColor\", \"style\", \"onPress\", \"pressColor\", \"pressOpacity\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar LinkPressable = function LinkPressable(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      _onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      onPressIn = _ref.onPressIn,\n      onPressOut = _ref.onPressOut,\n      to = _ref.to,\n      accessibilityRole = _ref.accessibilityRole,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  if (Platform.OS === 'web' && to) {\n    return React.createElement(Link, _extends({}, rest, {\n      to: to,\n      style: [styles.button, style],\n      onPress: function onPress(e) {\n        if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n          e.preventDefault();\n          _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n        }\n      },\n      onLongPress: onLongPress != null ? onLongPress : undefined,\n      onPressIn: onPressIn != null ? onPressIn : undefined,\n      onPressOut: onPressOut != null ? onPressOut : undefined\n    }), children);\n  } else {\n    return React.createElement(PlatformPressable, _extends({}, rest, {\n      accessibilityRole: accessibilityRole,\n      onPress: _onPress\n    }), React.createElement(View, {\n      style: style\n    }, children));\n  }\n};\n\nexport default function DrawerItem(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var icon = props.icon,\n      label = props.label,\n      labelStyle = props.labelStyle,\n      to = props.to,\n      _props$focused = props.focused,\n      focused = _props$focused === void 0 ? false : _props$focused,\n      allowFontScaling = props.allowFontScaling,\n      _props$activeTintColo = props.activeTintColor,\n      activeTintColor = _props$activeTintColo === void 0 ? colors.primary : _props$activeTintColo,\n      _props$inactiveTintCo = props.inactiveTintColor,\n      inactiveTintColor = _props$inactiveTintCo === void 0 ? Color(colors.text).alpha(0.68).rgb().string() : _props$inactiveTintCo,\n      _props$activeBackgrou = props.activeBackgroundColor,\n      activeBackgroundColor = _props$activeBackgrou === void 0 ? Color(activeTintColor).alpha(0.12).rgb().string() : _props$activeBackgrou,\n      _props$inactiveBackgr = props.inactiveBackgroundColor,\n      inactiveBackgroundColor = _props$inactiveBackgr === void 0 ? 'transparent' : _props$inactiveBackgr,\n      style = props.style,\n      onPress = props.onPress,\n      pressColor = props.pressColor,\n      pressOpacity = props.pressOpacity,\n      rest = _objectWithoutProperties(props, _excluded2);\n\n  var _StyleSheet$flatten = StyleSheet.flatten(style || {}),\n      _StyleSheet$flatten$b = _StyleSheet$flatten.borderRadius,\n      borderRadius = _StyleSheet$flatten$b === void 0 ? 4 : _StyleSheet$flatten$b;\n\n  var color = focused ? activeTintColor : inactiveTintColor;\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  var iconNode = icon ? icon({\n    size: 24,\n    focused: focused,\n    color: color\n  }) : null;\n  return React.createElement(View, _extends({\n    collapsable: false\n  }, rest, {\n    style: [styles.container, {\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor\n    }, style]\n  }), React.createElement(LinkPressable, {\n    onPress: onPress,\n    style: [styles.wrapper, {\n      borderRadius: borderRadius\n    }],\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: focused\n    },\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    to: to\n  }, React.createElement(React.Fragment, null, iconNode, React.createElement(View, {\n    style: [styles.label, {\n      marginLeft: iconNode ? 32 : 0,\n      marginVertical: 5\n    }]\n  }, typeof label === 'string' ? React.createElement(Text, {\n    numberOfLines: 1,\n    allowFontScaling: allowFontScaling,\n    style: [{\n      color: color,\n      fontWeight: '500'\n    }, labelStyle]\n  }, label) : label({\n    color: color,\n    focused: focused\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n    overflow: 'hidden'\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  label: {\n    marginRight: 32,\n    flex: 1\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"mappings":"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","names":["PlatformPressable","Link","useTheme","Color","React","LinkPressable","children","_ref","style","onPress","onLongPress","onPressIn","onPressOut","to","accessibilityRole","rest","Platform","OS","_extends","styles","button","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","undefined","View","DrawerItem","props","colors","icon","label","labelStyle","focused","allowFontScaling","activeTintColor","primary","inactiveTintColor","text","alpha","rgb","string","activeBackgroundColor","inactiveBackgroundColor","pressColor","pressOpacity","StyleSheet","flatten","borderRadius","color","backgroundColor","iconNode","size","collapsable","container","wrapper","accessibilityState","selected","Fragment","marginLeft","marginVertical","Text","numberOfLines","fontWeight","create","marginHorizontal","overflow","flexDirection","alignItems","padding","marginRight","flex","display"],"sourceRoot":"../../src","sources":["DrawerItem.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
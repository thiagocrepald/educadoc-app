{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport React, { useCallback, useEffect } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Mulish_800ExtraBold, Mulish_500Medium, Mulish_400Regular, Mulish_700Bold } from '@expo-google-fonts/mulish';\nimport { useFonts } from 'expo-font';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { ThemeProvider } from 'styled-components';\nimport theme from \"./src/global/styles/theme\";\nimport { Routes } from \"./src/routes\";\nimport { AuthProvider } from \"./src/context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useFonts = useFonts({\n    Mulish_800ExtraBold: Mulish_800ExtraBold,\n    Mulish_700Bold: Mulish_700Bold,\n    Mulish_500Medium: Mulish_500Medium,\n    Mulish_400Regular: Mulish_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  useEffect(function () {\n    function prepare() {\n      return _regeneratorRuntime.async(function prepare$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    prepare();\n  }, []);\n  var onLayoutRootView = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!fontsLoaded) {\n              _context2.next = 3;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(SplashScreen.hideAsync());\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return _jsx(NavigationContainer, {\n    onReady: onLayoutRootView,\n    children: _jsx(AuthProvider, {\n      children: _jsxs(ThemeProvider, {\n        theme: theme,\n        children: [_jsx(StatusBar, {\n          barStyle: \"light-content\",\n          backgroundColor: \"transparent\",\n          translucent: true\n        }), _jsx(Routes, {})]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useCallback","useEffect","SplashScreen","Mulish_800ExtraBold","Mulish_500Medium","Mulish_400Regular","Mulish_700Bold","useFonts","NavigationContainer","ThemeProvider","theme","Routes","AuthProvider","App","fontsLoaded","prepare","preventAutoHideAsync","onLayoutRootView","hideAsync"],"sources":["D:/Hygea - EducaDoc/educadoc-app/App.tsx"],"sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { StatusBar } from 'react-native';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport { Mulish_800ExtraBold, Mulish_500Medium, Mulish_400Regular, Mulish_700Bold } from '@expo-google-fonts/mulish';\r\nimport { useFonts } from 'expo-font';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { ThemeProvider } from 'styled-components'\r\nimport theme from './src/global/styles/theme'\r\nimport { Routes } from './src/routes';\r\nimport { AuthProvider } from './src/context/AuthContext'\r\n\r\nexport default function App() {\r\n  const [fontsLoaded] = useFonts({\r\n    Mulish_800ExtraBold,\r\n    Mulish_700Bold,\r\n    Mulish_500Medium,\r\n    Mulish_400Regular,\r\n  });\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      await SplashScreen.preventAutoHideAsync();\r\n    }\r\n    prepare();\r\n  }, []);\r\n  const onLayoutRootView = useCallback(async () => {\r\n    if (fontsLoaded) {\r\n      await SplashScreen.hideAsync();\r\n    }\r\n  }, [fontsLoaded]);\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer onReady={onLayoutRootView}>\r\n      <AuthProvider>\r\n        <ThemeProvider theme={theme}>\r\n          <StatusBar\r\n            barStyle=\"light-content\"\r\n            backgroundColor=\"transparent\"\r\n            translucent\r\n          />\r\n          <Routes />\r\n        </ThemeProvider>\r\n      </AuthProvider>\r\n    </NavigationContainer>\r\n  );\r\n}"],"mappings":";;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;;AAEA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,iBAAhD,EAAmEC,cAAnE,QAAyF,2BAAzF;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,KAAP;AACA,SAASC,MAAT;AACA,SAASC,YAAT;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAsBN,QAAQ,CAAC;IAC7BJ,mBAAmB,EAAnBA,mBAD6B;IAE7BG,cAAc,EAAdA,cAF6B;IAG7BF,gBAAgB,EAAhBA,gBAH6B;IAI7BC,iBAAiB,EAAjBA;EAJ6B,CAAD,CAA9B;EAAA;EAAA,IAAOS,WAAP;;EAMAb,SAAS,CAAC,YAAM;IACd,SAAec,OAAf;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACQb,YAAY,CAACc,oBAAb,EADR;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAGAD,OAAO;EACR,CALQ,EAKN,EALM,CAAT;EAMA,IAAME,gBAAgB,GAAGjB,WAAW,CAAC;IAAA;MAAA;QAAA;UAAA;YAAA,KAC/Bc,WAD+B;cAAA;cAAA;YAAA;;YAAA;YAAA,iCAE3BZ,YAAY,CAACgB,SAAb,EAF2B;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,EAIjC,CAACJ,WAAD,CAJiC,CAApC;;EAKA,IAAI,CAACA,WAAL,EAAkB;IAChB,OAAO,IAAP;EACD;;EAED,OACE,KAAC,mBAAD;IAAqB,OAAO,EAAEG,gBAA9B;IAAA,UACE,KAAC,YAAD;MAAA,UACE,MAAC,aAAD;QAAe,KAAK,EAAEP,KAAtB;QAAA,WACE,KAAC,SAAD;UACE,QAAQ,EAAC,eADX;UAEE,eAAe,EAAC,aAFlB;UAGE,WAAW;QAHb,EADF,EAME,KAAC,MAAD,KANF;MAAA;IADF;EADF,EADF;AAcD"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Container, ContainerProfile, ContainerBodyChat, SearchChat, TextInputChat, ButtonSend, Image, BoxRow, ButtonPopUp, MessageClosedChat, Modal } from \"./styles\";\nimport { ModalPopUp } from \"./Modal\";\nimport { Feather } from '@expo/vector-icons';\nimport galery from \"../../assets/Icons/galery.png\";\nimport { Profile } from \"../../components/Profile\";\nimport { Messages } from \"../../components/CategoryLists/ListChatMessages\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Chat() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      popUpVisible = _useState2[0],\n      setPopUpVisible = _useState2[1];\n\n  function handleOpenPopUp() {\n    setPopUpVisible(true);\n  }\n\n  function handleClosedPopUp() {\n    setPopUpVisible(false);\n  }\n\n  function handleFinishCall() {\n    if (!popUpVisible) {\n      setPopUpVisible(false);\n    } else navigation.goBack();\n  }\n\n  return _jsxs(Container, {\n    children: [_jsx(ContainerProfile, {\n      children: _jsx(Profile, {\n        date: \"Ter\\xE7a, 11 de maio\",\n        hellow: \"Ol\\xE1,\",\n        strong: \"Nome do m\\xE9dico\",\n        onPress: function onPress() {}\n      })\n    }), _jsxs(ContainerBodyChat, {\n      children: [_jsx(Messages, {\n        message: \"Bem-vindo(a) a mentoria da Educadoc!\"\n      }), _jsx(Messages, {\n        message: \"Pra iniciarmos, informe o Nome, Sexo, Idade\\r e a descri\\xE7\\xE3o do problema do(a) paciente. Se \\r quiser, tamb\\xE9m pode enviar um anexo sobre\\r o(a) paciente.\"\n      }), _jsx(ButtonPopUp, {\n        onPress: function onPress() {\n          return handleOpenPopUp();\n        },\n        children: _jsx(MessageClosedChat, {\n          children: \"Encerrar chamado\"\n        })\n      }), _jsxs(SearchChat, {\n        children: [_jsxs(BoxRow, {\n          children: [_jsx(Image, {\n            source: galery\n          }), _jsx(TextInputChat, {\n            placeholder: \"Escreva aqui...\",\n            placeholderTextColor: \"#3C3C3C\"\n          })]\n        }), _jsx(ButtonSend, {\n          children: _jsx(Feather, {\n            name: \"send\",\n            size: 18,\n            color: \"white\"\n          })\n        })]\n      }), _jsx(Modal, {\n        transparent: true,\n        visible: popUpVisible,\n        animationType: \"slide\",\n        children: _jsx(ModalPopUp, {\n          onClosed: function onClosed() {\n            return handleClosedPopUp();\n          },\n          onFinishCall: function onFinishCall() {\n            return handleFinishCall();\n          }\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Container","ContainerProfile","ContainerBodyChat","SearchChat","TextInputChat","ButtonSend","Image","BoxRow","ButtonPopUp","MessageClosedChat","Modal","ModalPopUp","Feather","galery","Profile","Messages","useNavigation","Chat","navigation","popUpVisible","setPopUpVisible","handleOpenPopUp","handleClosedPopUp","handleFinishCall","goBack"],"sources":["D:/Hygea - EducaDoc/educadoc-app/src/screens/Chat/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n    Container,\r\n    ContainerProfile,\r\n    ContainerBodyChat,\r\n    SearchChat,\r\n    TextInputChat,\r\n    ButtonSend,\r\n    Image,\r\n    BoxRow,\r\n    ButtonPopUp,\r\n    MessageClosedChat,\r\n    Modal\r\n} from './styles'\r\n\r\nimport { ModalPopUp } from './Modal'\r\nimport { Feather } from '@expo/vector-icons';\r\nimport galery from '../../assets/Icons/galery.png'\r\nimport { Profile } from \"../../components/Profile\";\r\nimport { Messages } from '../../components/CategoryLists/ListChatMessages'\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\r\nimport { StackParamsList } from '../../routes/auth.routes'\r\n\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport function Chat() {\r\n\r\n    const navigation = useNavigation<NativeStackNavigationProp<StackParamsList>>()\r\n\r\n    const [popUpVisible, setPopUpVisible] = useState(false)\r\n\r\n    function handleOpenPopUp() {\r\n        setPopUpVisible(true)\r\n    }\r\n    function handleClosedPopUp() {\r\n        setPopUpVisible(false)\r\n    }\r\n    function handleFinishCall() {\r\n        if (!popUpVisible) {\r\n            setPopUpVisible(false)\r\n        } else\r\n            navigation.goBack()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <ContainerProfile>\r\n                <Profile\r\n                    date='Terça, 11 de maio'\r\n                    hellow='Olá,'\r\n                    strong='Nome do médico'\r\n                    onPress={() => {}}\r\n                />\r\n            </ContainerProfile>\r\n\r\n            <ContainerBodyChat>\r\n                <Messages message=\"Bem-vindo(a) a mentoria da Educadoc!\"/>\r\n                <Messages message=\"Pra iniciarmos, informe o Nome, Sexo, Idade\r\n                e a descrição do problema do(a) paciente. Se \r\n                quiser, também pode enviar um anexo sobre\r\n                o(a) paciente.\" />\r\n                <ButtonPopUp onPress={() => handleOpenPopUp()}>\r\n                    <MessageClosedChat>Encerrar chamado</MessageClosedChat>\r\n                </ButtonPopUp>\r\n                <SearchChat>\r\n                    <BoxRow>\r\n                        <Image source={galery} />\r\n                        <TextInputChat\r\n                            placeholder=\"Escreva aqui...\"\r\n                            placeholderTextColor=\"#3C3C3C\"\r\n                        />\r\n                    </BoxRow>\r\n                    <ButtonSend>\r\n                        <Feather name=\"send\" size={18} color=\"white\" />\r\n                    </ButtonSend>\r\n                </SearchChat>\r\n\r\n                <Modal transparent={true} visible={popUpVisible} animationType=\"slide\">\r\n                    <ModalPopUp\r\n                        onClosed={() => handleClosedPopUp()}\r\n                        onFinishCall={() => handleFinishCall()}\r\n                    />\r\n                </Modal>\r\n\r\n            </ContainerBodyChat>\r\n        </Container>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACIC,SADJ,EAEIC,gBAFJ,EAGIC,iBAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,KAPJ,EAQIC,MARJ,EASIC,WATJ,EAUIC,iBAVJ,EAWIC,KAXJ;AAcA,SAASC,UAAT;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,MAAP;AACA,SAASC,OAAT;AACA,SAASC,QAAT;AAIA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,OAAO,SAASC,IAAT,GAAgB;EAEnB,IAAMC,UAAU,GAAGF,aAAa,EAAhC;;EAEA,gBAAwCjB,QAAQ,CAAC,KAAD,CAAhD;EAAA;EAAA,IAAOoB,YAAP;EAAA,IAAqBC,eAArB;;EAEA,SAASC,eAAT,GAA2B;IACvBD,eAAe,CAAC,IAAD,CAAf;EACH;;EACD,SAASE,iBAAT,GAA6B;IACzBF,eAAe,CAAC,KAAD,CAAf;EACH;;EACD,SAASG,gBAAT,GAA4B;IACxB,IAAI,CAACJ,YAAL,EAAmB;MACfC,eAAe,CAAC,KAAD,CAAf;IACH,CAFD,MAGIF,UAAU,CAACM,MAAX;EACP;;EAED,OACI,MAAC,SAAD;IAAA,WAEI,KAAC,gBAAD;MAAA,UACI,KAAC,OAAD;QACI,IAAI,EAAC,sBADT;QAEI,MAAM,EAAC,SAFX;QAGI,MAAM,EAAC,mBAHX;QAII,OAAO,EAAE,mBAAM,CAAE;MAJrB;IADJ,EAFJ,EAWI,MAAC,iBAAD;MAAA,WACI,KAAC,QAAD;QAAU,OAAO,EAAC;MAAlB,EADJ,EAEI,KAAC,QAAD;QAAU,OAAO,EAAC;MAAlB,EAFJ,EAMI,KAAC,WAAD;QAAa,OAAO,EAAE;UAAA,OAAMH,eAAe,EAArB;QAAA,CAAtB;QAAA,UACI,KAAC,iBAAD;UAAA;QAAA;MADJ,EANJ,EASI,MAAC,UAAD;QAAA,WACI,MAAC,MAAD;UAAA,WACI,KAAC,KAAD;YAAO,MAAM,EAAER;UAAf,EADJ,EAEI,KAAC,aAAD;YACI,WAAW,EAAC,iBADhB;YAEI,oBAAoB,EAAC;UAFzB,EAFJ;QAAA,EADJ,EAQI,KAAC,UAAD;UAAA,UACI,KAAC,OAAD;YAAS,IAAI,EAAC,MAAd;YAAqB,IAAI,EAAE,EAA3B;YAA+B,KAAK,EAAC;UAArC;QADJ,EARJ;MAAA,EATJ,EAsBI,KAAC,KAAD;QAAO,WAAW,EAAE,IAApB;QAA0B,OAAO,EAAEM,YAAnC;QAAiD,aAAa,EAAC,OAA/D;QAAA,UACI,KAAC,UAAD;UACI,QAAQ,EAAE;YAAA,OAAMG,iBAAiB,EAAvB;UAAA,CADd;UAEI,YAAY,EAAE;YAAA,OAAMC,gBAAgB,EAAtB;UAAA;QAFlB;MADJ,EAtBJ;IAAA,EAXJ;EAAA,EADJ;AA4CH"},"metadata":{},"sourceType":"module"}
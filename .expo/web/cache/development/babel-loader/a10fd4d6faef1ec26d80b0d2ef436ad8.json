{"ast":null,"code":"import React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { additiveInverseArray } from \"../utils/array\";\nimport { useKeyboard } from \"./useKeyboard\";\nexport function translateYOutputRangeFor(_ref) {\n  var position = _ref.position,\n      height = _ref.height,\n      topOffset = _ref.topOffset,\n      bottomOffset = _ref.bottomOffset,\n      keyboardHeight = _ref.keyboardHeight,\n      keyboardOffset = _ref.keyboardOffset;\n  var offset = position === 'bottom' ? bottomOffset : topOffset;\n  var keyboardAwareOffset = position === 'bottom' ? keyboardHeight + keyboardOffset : 0;\n  var range = [-(height * 2), Math.max(offset, keyboardAwareOffset)];\n  var outputRange = position === 'bottom' ? additiveInverseArray(range) : range;\n  return outputRange;\n}\nvar useNativeDriver = Platform.select({\n  native: true,\n  default: false\n});\nexport function useSlideAnimation(_ref2) {\n  var position = _ref2.position,\n      height = _ref2.height,\n      topOffset = _ref2.topOffset,\n      bottomOffset = _ref2.bottomOffset,\n      keyboardOffset = _ref2.keyboardOffset;\n  var animatedValue = React.useRef(new Animated.Value(0));\n\n  var _useKeyboard = useKeyboard(),\n      keyboardHeight = _useKeyboard.keyboardHeight;\n\n  var animate = React.useCallback(function (toValue) {\n    Animated.spring(animatedValue.current, {\n      toValue: toValue,\n      useNativeDriver: useNativeDriver,\n      friction: 8\n    }).start();\n  }, []);\n  var translateY = React.useMemo(function () {\n    return animatedValue.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: translateYOutputRangeFor({\n        position: position,\n        height: height,\n        topOffset: topOffset,\n        bottomOffset: bottomOffset,\n        keyboardHeight: keyboardHeight,\n        keyboardOffset: keyboardOffset\n      })\n    });\n  }, [position, height, topOffset, bottomOffset, keyboardHeight, keyboardOffset]);\n  var opacity = animatedValue.current.interpolate({\n    inputRange: [0, 0.7, 1],\n    outputRange: [0, 1, 1]\n  });\n  return {\n    animatedValue: animatedValue,\n    animate: animate,\n    animationStyles: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}","map":{"version":3,"names":["React","additiveInverseArray","useKeyboard","translateYOutputRangeFor","position","height","topOffset","bottomOffset","keyboardHeight","keyboardOffset","offset","keyboardAwareOffset","range","Math","max","outputRange","useNativeDriver","Platform","select","native","default","useSlideAnimation","animatedValue","useRef","Animated","Value","animate","useCallback","toValue","spring","current","friction","start","translateY","useMemo","interpolate","inputRange","opacity","animationStyles","transform"],"sources":["D:/Hygea - EducaDoc/educadoc-app/node_modules/react-native-toast-message/lib/src/hooks/useSlideAnimation.js"],"sourcesContent":["import React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { additiveInverseArray } from '../utils/array';\nimport { useKeyboard } from './useKeyboard';\nexport function translateYOutputRangeFor({ position, height, topOffset, bottomOffset, keyboardHeight, keyboardOffset }) {\n    const offset = position === 'bottom' ? bottomOffset : topOffset;\n    const keyboardAwareOffset = position === 'bottom' ? keyboardHeight + keyboardOffset : 0;\n    const range = [-(height * 2), Math.max(offset, keyboardAwareOffset)];\n    const outputRange = position === 'bottom' ? additiveInverseArray(range) : range;\n    return outputRange;\n}\nconst useNativeDriver = Platform.select({ native: true, default: false });\nexport function useSlideAnimation({ position, height, topOffset, bottomOffset, keyboardOffset }) {\n    const animatedValue = React.useRef(new Animated.Value(0));\n    const { keyboardHeight } = useKeyboard();\n    const animate = React.useCallback((toValue) => {\n        Animated.spring(animatedValue.current, {\n            toValue,\n            useNativeDriver,\n            friction: 8\n        }).start();\n    }, []);\n    const translateY = React.useMemo(() => animatedValue.current.interpolate({\n        inputRange: [0, 1],\n        outputRange: translateYOutputRangeFor({\n            position,\n            height,\n            topOffset,\n            bottomOffset,\n            keyboardHeight,\n            keyboardOffset\n        })\n    }), [position, height, topOffset, bottomOffset, keyboardHeight, keyboardOffset]);\n    const opacity = animatedValue.current.interpolate({\n        inputRange: [0, 0.7, 1],\n        outputRange: [0, 1, 1]\n    });\n    return {\n        animatedValue,\n        animate,\n        animationStyles: {\n            opacity,\n            transform: [\n                {\n                    translateY\n                }\n            ]\n        }\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tintColor\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default function DrawerToggleButton(_ref) {\n  var tintColor = _ref.tintColor,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var navigation = useNavigation();\n  return React.createElement(PlatformPressable, _extends({}, rest, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    android_ripple: {\n      borderless: true\n    },\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    style: styles.touchable,\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }), React.createElement(Image, {\n    style: [styles.icon, tintColor ? {\n      tintColor: tintColor\n    } : null],\n    source: require(\"./assets/toggle-drawer-icon.png\"),\n    fadeDuration: 0\n  }));\n}\nvar styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,iBAAT,QAAkC,4BAAlC;AACA,SACEC,aADF,EAGEC,aAHF,QAIO,0BAJP;AAKA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;;AAYA,eAAe,SAASC,kBAAT,CAA2BC,IAA3B,EAA2D;EAAA,IAA7BC,SAA6B,GAAFD,IAAE,CAA7BC,SAA6B;EAAA,IAAfC,IAAe,4BAAFF,IAAE;;EACxE,IAAMG,UAAU,GAAGN,aAAa,EAAhC;EAEA,OACEC,oBAACH,iBAAD,EAAkBS,aACZF,IADY,EACR;IACRG,UAAU,MADF;IAERC,iBAAiB,EAAC,QAFV;IAGRC,cAAc,EAAE;MAAEC,UAAU,EAAE;IAAd,CAHR;IAIRC,OAAO,EAAE;MAAA,OAAMN,UAAU,CAACO,QAAXP,CAAoBP,aAAa,CAACe,YAAdf,EAApBO,CAAN;IAAA,CAJD;IAKRS,KAAK,EAAEC,MAAM,CAACC,SALN;IAMRC,OAAO,EAAEC,QAAQ,CAACC,MAATD,CAAgB;MACvBE,GAAG,EAAEC,SADkB;MAEvBC,OAAO,EAAE;QAAEC,GAAG,EAAE,EAAP;QAAWC,KAAK,EAAE,EAAlB;QAAsBC,MAAM,EAAE,EAA9B;QAAkCC,IAAI,EAAE;MAAxC;IAFc,CAAhBR;EAND,CADQ,CAAlB,EAYElB,oBAAC2B,KAAD,EAAM;IACJb,KAAK,EAAE,CAACC,MAAM,CAACa,IAAR,EAAczB,SAAS,GAAG;MAAEA;IAAF,CAAH,GAAmB,IAA1C,CADH;IAEJ0B,MAAM,EAAEC,OAAO,mCAFX;IAGJC,YAAY,EAAE;EAHV,CAAN,CAZF,CADF;AAoBF;AAEA,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAXD,CAAkB;EAC/BJ,IAAI,EAAE;IACJM,MAAM,EAAE,EADJ;IAEJC,KAAK,EAAE,EAFH;IAGJC,MAAM,EAAE,CAHJ;IAIJC,UAAU,EAAE;EAJR,CADyB;EAO/BrB,SAAS,EAAE;IACTsB,gBAAgB,EAAE;EADT;AAPoB,CAAlBN,CAAf","names":["PlatformPressable","DrawerActions","useNavigation","React","DrawerToggleButton","_ref","tintColor","rest","navigation","_extends","accessible","accessibilityRole","android_ripple","borderless","onPress","dispatch","toggleDrawer","style","styles","touchable","hitSlop","Platform","select","ios","undefined","default","top","right","bottom","left","Image","icon","source","require","fadeDuration","StyleSheet","create","height","width","margin","resizeMode","marginHorizontal"],"sourceRoot":"../../src","sources":["DrawerToggleButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
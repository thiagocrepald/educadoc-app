{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { SignIn } from \"../screens/SignIn\";\nimport { Login } from \"../screens/Login\";\nimport { Forgout } from \"../screens/Forgout\";\nimport { ResetPassword } from \"../screens/Forgout/resetpass\";\nimport { AlertMessage } from \"../screens/Forgout/alertMessage\";\nimport { AlertMessageSucess } from \"../screens/Forgout/alertMessageSucess\";\nimport { StudentOrMentor } from \"../screens/FormSignUp/StudentOrMentor\";\nimport { My } from \"../screens/FormSignUp/My\";\nimport { Doctor } from \"../screens/FormSignUp/Doctor\";\nimport { Acess } from \"../screens/FormSignUp/Acess\";\nimport { TermsAndPrivacy } from \"../screens/FormSignUp/TermsAndPrivacy\";\nimport { CadasterSucces } from \"../screens/FormSignUp/CadasterSuccess\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthStack = createStackNavigator();\nexport function AuthRoutes() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAppSignInLauched = _useState2[0],\n      setIsAppSignInLauched = _useState2[1];\n\n  useEffect(function () {\n    appLauched();\n  }, []);\n\n  function appLauched() {\n    var appData;\n    return _regeneratorRuntime.async(function appLauched$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('isAppFirstLauched'));\n\n          case 2:\n            appData = _context.sent;\n\n            if (appData == null) {\n              setIsAppSignInLauched(true);\n              AsyncStorage.setItem('isAppFirstLauched', 'false');\n            } else {\n              setIsAppSignInLauched(false);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return isAppSignInLauched != null && _jsxs(AuthStack.Navigator, {\n    children: [isAppSignInLauched && _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"SignIn\",\n      component: SignIn\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Login\",\n      component: Login\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Forgout\",\n      component: Forgout\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"AlertMessage\",\n      component: AlertMessage\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"ResetPassword\",\n      component: ResetPassword\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"AlertMessageSucess\",\n      component: AlertMessageSucess\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"StudentOrMentor\",\n      component: StudentOrMentor\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"My\",\n      component: My\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Doctor\",\n      component: Doctor\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Acess\",\n      component: Acess\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"TermsAndPrivacy\",\n      component: TermsAndPrivacy\n    }), _jsx(AuthStack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"CadasterSucces\",\n      component: CadasterSucces\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","createStackNavigator","AsyncStorage","SignIn","Login","Forgout","ResetPassword","AlertMessage","AlertMessageSucess","StudentOrMentor","My","Doctor","Acess","TermsAndPrivacy","CadasterSucces","AuthStack","AuthRoutes","isAppSignInLauched","setIsAppSignInLauched","appLauched","getItem","appData","setItem","headerShown"],"sources":["D:/Hygea - EducaDoc/educadoc-app/src/routes/auth.routes.tsx"],"sourcesContent":["import React, { useState, useEffect, SetStateAction } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\n\r\n//Telas de Welcome e Login\r\nimport { SignIn } from '../screens/SignIn';\r\nimport { Login } from '../screens/Login';\r\n\r\n//Telas para resetar a senha\r\nimport { Forgout } from '../screens/Forgout';\r\nimport { ResetPassword } from '../screens/Forgout/resetpass'\r\nimport { AlertMessage } from '../screens/Forgout/alertMessage'\r\nimport { AlertMessageSucess } from '../screens/Forgout/alertMessageSucess'\r\n\r\n//Telas de Cadastro\r\nimport { StudentOrMentor } from '../screens/FormSignUp/StudentOrMentor';\r\nimport { My } from '../screens/FormSignUp/My';\r\nimport { Doctor } from '../screens/FormSignUp/Doctor';\r\nimport { Acess } from '../screens/FormSignUp/Acess';\r\nimport { TermsAndPrivacy } from '../screens/FormSignUp/TermsAndPrivacy'\r\nimport { CadasterSucces } from '../screens/FormSignUp/CadasterSuccess'\r\n\r\nexport type StackParamsList = {\r\n    AdminRoutes: undefined;\r\n    Chat: undefined;\r\n    Home: undefined;\r\n    Mentor: undefined;\r\n    My: undefined;\r\n    Doctor: {\r\n        name: string;\r\n        cpf: string;\r\n        dateNasc: string;\r\n    };\r\n    //alterar dps\r\n    Acess?: {};\r\n    SignIn: undefined;\r\n    Login: undefined;\r\n    Forgout: undefined;\r\n    AlertMessage: undefined;\r\n    ResetPassword: {\r\n        senha: string;\r\n    }\r\n    AlertMessageSucess: undefined;\r\n    StudentOrMentor: {\r\n        type: string;\r\n    };\r\n    TermsAndPrivacy: undefined;\r\n    CadasterSucces: undefined;\r\n    MainDrawer: undefined;\r\n}\r\n\r\nconst AuthStack = createStackNavigator<StackParamsList>()\r\n\r\nexport function AuthRoutes() {\r\n\r\n    const [isAppSignInLauched, setIsAppSignInLauched] = useState<any>(null)\r\n    //Verificando se o usuário já fez mais de um login no app\r\n    useEffect(() => {\r\n        appLauched()\r\n    }, [])\r\n    async function appLauched() {\r\n        const appData = await AsyncStorage.getItem('isAppFirstLauched')\r\n        if (appData == null) {\r\n            setIsAppSignInLauched(true)\r\n            AsyncStorage.setItem('isAppFirstLauched', 'false')\r\n        } else {\r\n            setIsAppSignInLauched(false)\r\n        }\r\n    }\r\n    return (\r\n\r\n        isAppSignInLauched != null && (\r\n            <AuthStack.Navigator>\r\n                {isAppSignInLauched && (\r\n                    <AuthStack.Screen\r\n                        options={{ headerShown: false }}\r\n                        name='SignIn'\r\n                        component={SignIn}\r\n                    />\r\n                )}\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='Login'\r\n                    component={Login}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='Forgout'\r\n                    component={Forgout}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='AlertMessage'\r\n                    component={AlertMessage}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='ResetPassword'\r\n                    component={ResetPassword}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='AlertMessageSucess'\r\n                    component={AlertMessageSucess}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='StudentOrMentor'\r\n                    component={StudentOrMentor}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='My'\r\n                    component={My}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='Doctor'\r\n                    component={Doctor}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='Acess'\r\n                    component={Acess}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='TermsAndPrivacy'\r\n                    component={TermsAndPrivacy}\r\n                />\r\n                <AuthStack.Screen\r\n                    options={{ headerShown: false }}\r\n                    name='CadasterSucces'\r\n                    component={CadasterSucces}\r\n                />\r\n            </AuthStack.Navigator >\r\n        )\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
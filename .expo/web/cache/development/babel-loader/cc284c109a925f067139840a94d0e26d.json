{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"type\", \"title\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext } from 'react';\nimport { ContainerButton, TitleButton, ContainerTextAccount, Loading } from \"./styles\";\nimport { TextAccount } from \"../TextAccount\";\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Button(_ref) {\n  var type = _ref.type,\n      title = _ref.title,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useContext = useContext(AuthContext),\n      loadingAuth = _useContext.loadingAuth;\n\n  if (type === 'login') {\n    return _jsxs(_Fragment, {\n      children: [_jsx(ContainerTextAccount, {\n        children: _jsx(TextAccount, {\n          onPress: function onPress() {\n            return navigate('Login');\n          },\n          title: \"J\\xE1 possui uma conta?\",\n          strong: \"Login\"\n        })\n      }), _jsx(ContainerButton, _objectSpread(_objectSpread({}, rest), {}, {\n        children: loadingAuth ? _jsx(Loading, {\n          size: 25,\n          color: \"#0c7384\"\n        }) : _jsx(TitleButton, {\n          children: title\n        })\n      }))]\n    });\n  } else if (type === 'cadaster') {\n    return _jsxs(_Fragment, {\n      children: [_jsx(ContainerTextAccount, {\n        children: _jsx(TextAccount, {\n          onPress: function onPress() {\n            return navigate('StudentOrMentor');\n          },\n          title: \"N\\xE3o possui uma conta?\",\n          strong: \"Cadastre-se\"\n        })\n      }), _jsx(ContainerButton, _objectSpread(_objectSpread({}, rest), {}, {\n        children: loadingAuth ? _jsx(Loading, {\n          size: 25,\n          color: \"#0c7384\"\n        }) : _jsx(TitleButton, {\n          children: title\n        })\n      }))]\n    });\n  } else return _jsx(_Fragment, {\n    children: _jsx(ContainerButton, _objectSpread(_objectSpread({}, rest), {}, {\n      children: loadingAuth ? _jsx(Loading, {\n        size: 25,\n        color: \"#0c7384\"\n      }) : _jsx(TitleButton, {\n        children: title\n      })\n    }))\n  });\n}","map":{"version":3,"names":["React","useContext","ContainerButton","TitleButton","ContainerTextAccount","Loading","TextAccount","useNavigation","AuthContext","Button","type","title","rest","navigate","loadingAuth"],"sources":["D:/Hygea - EducaDoc/educadoc-app/src/components/Button/index.tsx"],"sourcesContent":["import React, { useContext } from 'react'\r\nimport {\r\n    ContainerButton,\r\n    TitleButton,\r\n    ContainerTextAccount,\r\n    Loading\r\n} from './styles'\r\n\r\nimport { TouchableOpacityProps } from 'react-native'\r\nimport { TextAccount } from '../TextAccount'\r\nimport { NavigateProps } from '../../utils/navigateProps'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { AuthContext } from '../../context/AuthContext'\r\n\r\ninterface ButtonProps extends TouchableOpacityProps {\r\n    title: string;\r\n    type?: string;\r\n}\r\n\r\nexport function Button({ type, title, ...rest }: ButtonProps) {\r\n\r\n    const { navigate } = useNavigation<NavigateProps>()\r\n\r\n    const { loadingAuth } = useContext(AuthContext)\r\n\r\n    if (type === 'login') {\r\n        return (\r\n            <>\r\n                <ContainerTextAccount>\r\n                    <TextAccount\r\n                        onPress={() => navigate('Login')}\r\n                        title=\"Já possui uma conta?\"\r\n                        strong=\"Login\"\r\n                    />\r\n                </ContainerTextAccount>\r\n\r\n                <ContainerButton {...rest}>\r\n                    {loadingAuth ? (\r\n                        <Loading size={25} color=\"#0c7384\" />\r\n                    ) : (\r\n\r\n                        <TitleButton>{title}</TitleButton>\r\n                    )}\r\n                </ContainerButton>\r\n            </>\r\n        )\r\n    } else if (type === 'cadaster') {\r\n        return (\r\n            <>\r\n                <ContainerTextAccount>\r\n                    <TextAccount\r\n                        onPress={() => navigate('StudentOrMentor')}\r\n                        title=\"Não possui uma conta?\"\r\n                        strong=\"Cadastre-se\"\r\n                    />\r\n                </ContainerTextAccount>\r\n\r\n                <ContainerButton {...rest}>\r\n                    {loadingAuth ? (\r\n                        <Loading size={25} color=\"#0c7384\" />\r\n                    ) : (\r\n\r\n                        <TitleButton>{title}</TitleButton>\r\n                    )}\r\n                </ContainerButton>\r\n            </>\r\n        )\r\n    } else\r\n        return (\r\n            <>\r\n                <ContainerButton {...rest}>\r\n                    {loadingAuth ? (\r\n                        <Loading size={25} color=\"#0c7384\" />\r\n                    ) : (\r\n\r\n                        <TitleButton>{title}</TitleButton>\r\n                    )}\r\n                </ContainerButton>\r\n            </>\r\n        );\r\n}\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACIC,eADJ,EAEIC,WAFJ,EAGIC,oBAHJ,EAIIC,OAJJ;AAQA,SAASC,WAAT;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT;;;;AAOA,OAAO,SAASC,MAAT,OAAuD;EAAA,IAArCC,IAAqC,QAArCA,IAAqC;EAAA,IAA/BC,KAA+B,QAA/BA,KAA+B;EAAA,IAArBC,IAAqB;;EAE1D,qBAAqBL,aAAa,EAAlC;EAAA,IAAQM,QAAR,kBAAQA,QAAR;;EAEA,kBAAwBZ,UAAU,CAACO,WAAD,CAAlC;EAAA,IAAQM,WAAR,eAAQA,WAAR;;EAEA,IAAIJ,IAAI,KAAK,OAAb,EAAsB;IAClB,OACI;MAAA,WACI,KAAC,oBAAD;QAAA,UACI,KAAC,WAAD;UACI,OAAO,EAAE;YAAA,OAAMG,QAAQ,CAAC,OAAD,CAAd;UAAA,CADb;UAEI,KAAK,EAAC,yBAFV;UAGI,MAAM,EAAC;QAHX;MADJ,EADJ,EASI,KAAC,eAAD,kCAAqBD,IAArB;QAAA,UACKE,WAAW,GACR,KAAC,OAAD;UAAS,IAAI,EAAE,EAAf;UAAmB,KAAK,EAAC;QAAzB,EADQ,GAIR,KAAC,WAAD;UAAA,UAAcH;QAAd;MALR,GATJ;IAAA,EADJ;EAoBH,CArBD,MAqBO,IAAID,IAAI,KAAK,UAAb,EAAyB;IAC5B,OACI;MAAA,WACI,KAAC,oBAAD;QAAA,UACI,KAAC,WAAD;UACI,OAAO,EAAE;YAAA,OAAMG,QAAQ,CAAC,iBAAD,CAAd;UAAA,CADb;UAEI,KAAK,EAAC,0BAFV;UAGI,MAAM,EAAC;QAHX;MADJ,EADJ,EASI,KAAC,eAAD,kCAAqBD,IAArB;QAAA,UACKE,WAAW,GACR,KAAC,OAAD;UAAS,IAAI,EAAE,EAAf;UAAmB,KAAK,EAAC;QAAzB,EADQ,GAIR,KAAC,WAAD;UAAA,UAAcH;QAAd;MALR,GATJ;IAAA,EADJ;EAoBH,CArBM,MAsBH,OACI;IAAA,UACI,KAAC,eAAD,kCAAqBC,IAArB;MAAA,UACKE,WAAW,GACR,KAAC,OAAD;QAAS,IAAI,EAAE,EAAf;QAAmB,KAAK,EAAC;MAAzB,EADQ,GAIR,KAAC,WAAD;QAAA,UAAcH;MAAd;IALR;EADJ,EADJ;AAYP"},"metadata":{},"sourceType":"module"}
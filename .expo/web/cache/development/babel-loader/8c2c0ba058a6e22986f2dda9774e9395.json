{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React, { useState } from 'react';\nimport { Container, TitleProgess, Title, ContainerBody, ContainerButton, ContainerPhoto, ContainerCheckBox, ContainerAlignRow, Align, TextSex, ButtonSexo, Image, UploadPhoto } from \"./styles\";\nimport { Button } from \"../../../components/Button\";\nimport profile from \"../../../assets/Icons/profile.png\";\nimport { Controlled } from \"../../../components/Form/Controlled\";\nimport { schemaMy } from \"../../../utils/validationForm\";\nimport photo from \"../../../assets/Icons/photo.png\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { useForm } from 'react-hook-form';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function My(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  var _useState = useState('notfound'),\n      _useState2 = _slicedToArray(_useState, 2),\n      sexo = _useState2[0],\n      setSexo = _useState2[1];\n\n  var _useForm = useForm({\n    resolver: yupResolver(schemaMy)\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var status = route.params;\n\n  function handle(dadosMy) {\n    var _OBJECT = {\n      dadosMy: dadosMy,\n      sexo: {\n        sexo: sexo\n      },\n      status: {\n        status: status\n      }\n    };\n\n    var _my = _extends({}, _OBJECT.dadosMy, _OBJECT.sexo, _OBJECT.status);\n\n    navigation.navigate('Doctor', _my);\n  }\n\n  return _jsxs(Container, {\n    children: [_jsx(TitleProgess, {\n      children: \"PASSO 2 DE 5\"\n    }), _jsx(Title, {\n      children: \"Conte sobre voc\\xEA!\"\n    }), _jsxs(ContainerBody, {\n      children: [_jsxs(ContainerPhoto, {\n        activeOpacity: 9,\n        children: [_jsx(Image, {\n          source: profile\n        }), _jsx(UploadPhoto, {\n          children: _jsx(Image, {\n            source: photo\n          })\n        })]\n      }), _jsx(Controlled, {\n        name: \"name\",\n        control: control,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"#fff\",\n        error: errors.name\n      }), _jsx(Controlled, {\n        name: \"cpf\",\n        control: control,\n        placeholder: \"CPF\",\n        placeholderTextColor: \"#fff\",\n        error: errors.cpf,\n        type: \"cpf\"\n      }), _jsx(Controlled, {\n        name: \"dateNasc\",\n        control: control,\n        placeholder: \"Data de nascimento\",\n        placeholderTextColor: \"#fff\",\n        error: errors.dateNasc,\n        type: \"date\"\n      }), _jsxs(ContainerCheckBox, {\n        children: [_jsxs(ContainerAlignRow, {\n          children: [_jsxs(Align, {\n            children: [_jsx(ButtonSexo, {\n              onPress: function onPress() {\n                return setSexo('Feminino');\n              },\n              children: sexo === 'Feminino' ? _jsx(Ionicons, {\n                name: \"checkmark-circle\",\n                size: 24,\n                color: \"white\"\n              }) : _jsx(Ionicons, {\n                name: \"checkmark-circle-outline\",\n                size: 24,\n                color: \"white\"\n              })\n            }), _jsx(TextSex, {\n              children: \"Feminino\"\n            })]\n          }), _jsxs(Align, {\n            children: [_jsx(ButtonSexo, {\n              onPress: function onPress() {\n                return setSexo('Masculino');\n              },\n              children: sexo === 'Masculino' ? _jsx(Ionicons, {\n                name: \"checkmark-circle\",\n                size: 24,\n                color: \"white\"\n              }) : _jsx(Ionicons, {\n                name: \"checkmark-circle-outline\",\n                size: 24,\n                color: \"white\"\n              })\n            }), _jsx(TextSex, {\n              children: \"Masculino\"\n            })]\n          })]\n        }), _jsxs(Align, {\n          style: {\n            marginTop: 10\n          },\n          children: [_jsx(ButtonSexo, {\n            onPress: function onPress() {\n              return setSexo('Prefiro não responder');\n            },\n            children: sexo === 'Prefiro não responder' ? _jsx(Ionicons, {\n              name: \"checkmark-circle\",\n              size: 24,\n              color: \"white\"\n            }) : _jsx(Ionicons, {\n              name: \"checkmark-circle-outline\",\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(TextSex, {\n            children: \"Prefiro n\\xE3o responder\"\n          })]\n        })]\n      }), _jsx(ContainerButton, {\n        children: _jsx(Button, {\n          type: \"login\",\n          onPress: handleSubmit(handle),\n          title: \"Pr\\xF3ximo\"\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Container","TitleProgess","Title","ContainerBody","ContainerButton","ContainerPhoto","ContainerCheckBox","ContainerAlignRow","Align","TextSex","ButtonSexo","Image","UploadPhoto","Button","profile","Controlled","schemaMy","photo","yupResolver","useNavigation","useRoute","useForm","Ionicons","My","navigation","route","sexo","setSexo","resolver","control","handleSubmit","errors","formState","status","params","handle","dadosMy","_OBJECT","_my","navigate","name","cpf","dateNasc","marginTop"],"sources":["D:/Hygea - EducaDoc/educadoc-app/src/screens/FormSignUp/My/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport {\r\n    Container,\r\n    TitleProgess,\r\n    Title,\r\n    ContainerBody,\r\n    ContainerButton,\r\n    ContainerPhoto,\r\n    ContainerCheckBox,\r\n    ContainerAlignRow,\r\n    Align,\r\n    TextSex,\r\n    ButtonSexo,\r\n    Image,\r\n    UploadPhoto\r\n} from './styles'\r\n\r\nimport { Button } from '../../../components/Button'\r\nimport profile from '../../../assets/Icons/profile.png'\r\nimport { Controlled } from '../../../components/Form/Controlled'\r\nimport { StackParamsList } from '../../../routes/auth.routes'\r\nimport { schemaMy } from '../../../utils/validationForm'\r\nimport photo from '../../../assets/Icons/photo.png'\r\nimport { SignUpFirebase } from '../../../context/AuthContext'\r\n\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { useNavigation, useRoute } from '@react-navigation/native'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n\r\ntype FormData = {\r\n    name: string;\r\n    cpf: string;\r\n    dateNasc: string;\r\n    sexo: string;\r\n    category: string;\r\n}\r\n\r\nexport function My({ }) {\r\n\r\n    const navigation = useNavigation<NativeStackNavigationProp<StackParamsList>>()\r\n    const route = useRoute();\r\n    const [sexo, setSexo] = useState('notfound')\r\n    const { control, handleSubmit, formState: { errors } } = useForm<FormData>({\r\n        resolver: yupResolver(schemaMy)\r\n    })\r\n\r\n    const status = route.params\r\n\r\n    function handle(dadosMy: FormData) {\r\n        const _OBJECT = {\r\n            dadosMy: dadosMy,\r\n            sexo: {sexo},\r\n            status: {status}\r\n        }\r\n        const _my = Object.assign({}, _OBJECT.dadosMy, _OBJECT.sexo, _OBJECT.status)\r\n\r\n        navigation.navigate('Doctor', _my)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <TitleProgess>PASSO 2 DE 5</TitleProgess>\r\n\r\n            <Title>Conte sobre você!</Title>\r\n\r\n            <ContainerBody>\r\n\r\n                <ContainerPhoto activeOpacity={9}>\r\n                    <Image source={profile} />\r\n                    <UploadPhoto>\r\n                        <Image source={photo} />\r\n                    </UploadPhoto>\r\n                </ContainerPhoto>\r\n\r\n                <Controlled\r\n                    name='name'\r\n                    control={control}\r\n                    placeholder='Nome completo' placeholderTextColor=\"#fff\"\r\n                    error={errors.name}\r\n                />\r\n                <Controlled\r\n                    name='cpf'\r\n                    control={control}\r\n                    placeholder='CPF' placeholderTextColor=\"#fff\"\r\n                    error={errors.cpf}\r\n                    type=\"cpf\"\r\n                />\r\n                <Controlled\r\n                    name='dateNasc'\r\n                    control={control}\r\n                    placeholder='Data de nascimento' placeholderTextColor=\"#fff\"\r\n                    error={errors.dateNasc}\r\n                    type=\"date\"\r\n                />\r\n\r\n                <ContainerCheckBox>\r\n                    <ContainerAlignRow>\r\n                        <Align>\r\n                            <ButtonSexo onPress={() => setSexo('Feminino')}>\r\n                                {sexo === 'Feminino' ? (\r\n                                    <Ionicons name=\"checkmark-circle\" size={24} color=\"white\" />\r\n                                ) : (\r\n                                    <Ionicons name=\"checkmark-circle-outline\" size={24} color=\"white\" />\r\n                                )}\r\n                            </ButtonSexo>\r\n                            <TextSex>Feminino</TextSex>\r\n                        </Align>\r\n                        <Align>\r\n                            <ButtonSexo onPress={() => setSexo('Masculino')}>\r\n                                {sexo === 'Masculino' ? (\r\n                                    <Ionicons name=\"checkmark-circle\" size={24} color=\"white\" />\r\n                                ) : (\r\n                                    <Ionicons name=\"checkmark-circle-outline\" size={24} color=\"white\" />\r\n                                )}\r\n                            </ButtonSexo>\r\n                            <TextSex>Masculino</TextSex>\r\n                        </Align>\r\n                    </ContainerAlignRow>\r\n                    <Align style={{ marginTop: 10 }}>\r\n                        <ButtonSexo onPress={() => setSexo('Prefiro não responder')}>\r\n                            {sexo === 'Prefiro não responder' ? (\r\n                                <Ionicons name=\"checkmark-circle\" size={24} color=\"white\" />\r\n                            ) : (\r\n                                <Ionicons name=\"checkmark-circle-outline\" size={24} color=\"white\" />\r\n                            )}\r\n                        </ButtonSexo>\r\n                        <TextSex>Prefiro não responder</TextSex>\r\n                    </Align>\r\n                </ContainerCheckBox>\r\n\r\n                <ContainerButton>\r\n                    <Button\r\n                        type=\"login\"\r\n                        onPress={handleSubmit(handle)}\r\n                        title='Próximo' />\r\n                </ContainerButton>\r\n\r\n            </ContainerBody>\r\n        </Container>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
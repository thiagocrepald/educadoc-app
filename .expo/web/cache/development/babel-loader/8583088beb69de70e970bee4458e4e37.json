{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { Container, TitleProgess, Title, ContainerBody, Ajusted, ContainerButton, ContainerAlignRow, ContainerPicker, TitlePicker, ButtonOpenPicker, ContainerCheckStudent, TextConfirmStudent, ButtonCheck } from \"./styles\";\nimport { Button } from \"../../../components/Button\";\nimport { Controlled } from \"../../../components/Form/Controlled\";\nimport { useForm } from 'react-hook-form';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { AntDesign, Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function Doctor() {\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      pressed = _useState2[0],\n      setPressed = _useState2[1];\n\n  var my = route.params;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit;\n\n  function handle(doctor) {\n    var _OBJECT, _doctor;\n\n    return _regeneratorRuntime.async(function handle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _OBJECT = {\n              my: my,\n              doctor: doctor\n            };\n            _doctor = _extends({}, _OBJECT.my, _OBJECT.doctor);\n            navigation.navigate('Acess', _doctor);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(Container, {\n    children: [_jsx(TitleProgess, {\n      children: \"PASSO 3 DE 5\"\n    }), _jsx(Title, {\n      children: \"Dados do m\\xE9dico\"\n    }), _jsxs(ContainerBody, {\n      children: [_jsxs(ContainerCheckStudent, {\n        children: [_jsx(ButtonCheck, {\n          onPress: function onPress() {\n            return setPressed(!pressed);\n          },\n          children: pressed ? _jsx(Ionicons, {\n            name: \"checkmark-circle-outline\",\n            size: 24,\n            color: \"white\"\n          }) : _jsx(Ionicons, {\n            name: \"checkmark-circle\",\n            size: 24,\n            color: \"white\"\n          })\n        }), _jsx(TextConfirmStudent, {\n          children: \"Sou estudante\"\n        })]\n      }), pressed ? _jsxs(_Fragment, {\n        children: [_jsxs(ContainerAlignRow, {\n          children: [_jsx(Ajusted, {\n            style: {\n              marginRight: 10\n            },\n            children: _jsx(Controlled, {\n              name: \"crm\",\n              control: control,\n              placeholder: \"CRM\",\n              placeholderTextColor: \"#fff\"\n            })\n          }), _jsx(Ajusted, {\n            style: {\n              marginLeft: 10\n            },\n            children: _jsx(Controlled, {\n              name: \"estadocrm\",\n              control: control,\n              placeholder: \"Estado do CRM\",\n              placeholderTextColor: \"#fff\"\n            })\n          })]\n        }), _jsx(Controlled, {\n          name: \"dataFormatura\",\n          control: control,\n          placeholder: \"Data da formatura\",\n          placeholderTextColor: \"#fff\",\n          type: \"date\"\n        }), _jsxs(ContainerPicker, {\n          children: [_jsx(TitlePicker, {\n            children: \"Especialidades\"\n          }), _jsx(ButtonOpenPicker, {\n            onPress: function onPress() {\n              return alert('em desenvolvimento...');\n            },\n            children: _jsx(AntDesign, {\n              name: \"down\",\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Controlled, {\n          type: \"form\",\n          name: \"universidade\",\n          control: control,\n          placeholder: \"Sua universidade\",\n          placeholderTextColor: \"#fff\"\n        }), _jsx(Controlled, {\n          name: \"estado\",\n          control: control,\n          placeholder: \"Seu Estado\",\n          placeholderTextColor: \"#fff\"\n        })]\n      }), _jsx(ContainerButton, {\n        children: _jsx(Button, {\n          type: \"login\",\n          onPress: handleSubmit(handle),\n          title: \"Pr\\xF3ximo\"\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Container","TitleProgess","Title","ContainerBody","Ajusted","ContainerButton","ContainerAlignRow","ContainerPicker","TitlePicker","ButtonOpenPicker","ContainerCheckStudent","TextConfirmStudent","ButtonCheck","Button","Controlled","useForm","useNavigation","useRoute","AntDesign","Ionicons","Doctor","navigation","route","pressed","setPressed","my","params","control","handleSubmit","handle","doctor","_OBJECT","_doctor","navigate","marginRight","marginLeft","alert"],"sources":["D:/Hygea - EducaDoc/educadoc-app/src/screens/FormSignUp/Doctor/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport {\r\n    Container,\r\n    TitleProgess,\r\n    Title,\r\n    ContainerBody,\r\n    Ajusted,\r\n    ContainerButton,\r\n    ContainerAlignRow,\r\n    ContainerPicker,\r\n    TitlePicker,\r\n    ButtonOpenPicker,\r\n    ContainerCheckStudent,\r\n    TextConfirmStudent,\r\n    ButtonCheck\r\n} from './styles'\r\n\r\nimport { Button } from '../../../components/Button'\r\nimport { Controlled } from '../../../components/Form/Controlled'\r\nimport { StackParamsList } from '../../../routes/auth.routes'\r\nimport { schemaDoctor } from '../../../utils/validationForm'\r\n\r\nimport { useForm } from 'react-hook-form'\r\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native'\r\nimport { AntDesign, Ionicons } from '@expo/vector-icons';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\n\r\ntype FormDataDoctor = {\r\n    crm: string;\r\n    estadocrm: string;\r\n    dataFormatura: string;\r\n    universidade: string;\r\n    estado: string;\r\n}\r\ntype RouteDetailParams = {\r\n    Doctor: {\r\n        name: string;\r\n        cpf: string;\r\n        dateNasc: string;\r\n    }\r\n}\r\n\r\ntype DoctorRouteProp = RouteProp<RouteDetailParams, \"Doctor\">\r\n\r\nexport function Doctor() {\r\n\r\n    const navigation = useNavigation<NativeStackNavigationProp<StackParamsList>>()\r\n    const route = useRoute<DoctorRouteProp>();\r\n    const [pressed, setPressed] = useState(true);\r\n    //descontrindo os valores recebidos pelo route.params\r\n    const my = route.params\r\n    const { control, handleSubmit } = useForm<FormDataDoctor>()\r\n\r\n    async function handle(doctor: FormDataDoctor) {\r\n        const _OBJECT = {\r\n            my: my,\r\n            doctor: doctor\r\n        }\r\n        const _doctor = Object.assign({}, _OBJECT.my, _OBJECT.doctor)\r\n            navigation.navigate('Acess', _doctor)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <TitleProgess>PASSO 3 DE 5</TitleProgess>\r\n\r\n            <Title>Dados do m√©dico</Title>\r\n\r\n            <ContainerBody>\r\n\r\n                <ContainerCheckStudent>\r\n                    <ButtonCheck onPress={() => setPressed(!pressed)}>\r\n                        {pressed ? (\r\n                            <Ionicons name=\"checkmark-circle-outline\" size={24} color=\"white\" />\r\n                        ) : (\r\n                            <Ionicons name=\"checkmark-circle\" size={24} color=\"white\" />\r\n                        )}\r\n                    </ButtonCheck>\r\n                    <TextConfirmStudent>Sou estudante</TextConfirmStudent>\r\n                </ContainerCheckStudent>\r\n\r\n                {pressed ? (\r\n                    <>\r\n                        <ContainerAlignRow>\r\n                            <Ajusted style={{ marginRight: 10 }}>\r\n                                <Controlled\r\n                                    name='crm'\r\n                                    control={control}\r\n                                    placeholder='CRM' placeholderTextColor=\"#fff\"\r\n                                />\r\n                            </Ajusted>\r\n                            <Ajusted style={{ marginLeft: 10 }}>\r\n                                <Controlled\r\n                                    name='estadocrm'\r\n                                    control={control}\r\n                                    placeholder='Estado do CRM' placeholderTextColor=\"#fff\"\r\n                                />\r\n                            </Ajusted>\r\n                        </ContainerAlignRow>\r\n\r\n                        <Controlled\r\n                            name='dataFormatura'\r\n                            control={control}\r\n                            placeholder='Data da formatura' placeholderTextColor=\"#fff\"\r\n                            type=\"date\"\r\n                        />\r\n\r\n                        <ContainerPicker>\r\n                            <TitlePicker>Especialidades</TitlePicker>\r\n                            <ButtonOpenPicker onPress={() => alert('em desenvolvimento...')}>\r\n                                <AntDesign name=\"down\" size={24} color=\"white\" />\r\n                            </ButtonOpenPicker>\r\n                        </ContainerPicker>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Controlled\r\n                            type=\"form\"\r\n                            name='universidade'\r\n                            control={control}\r\n                            placeholder=\"Sua universidade\"\r\n                            placeholderTextColor=\"#fff\"\r\n                        />\r\n                        <Controlled\r\n                            name='estado'\r\n                            control={control}\r\n                            placeholder=\"Seu Estado\"\r\n                            placeholderTextColor=\"#fff\"\r\n                        />\r\n                    </>\r\n                )}\r\n                <ContainerButton>\r\n                    <Button\r\n                        type=\"login\"\r\n                        onPress={handleSubmit(handle)}\r\n                        title='Pr√≥ximo' />\r\n                </ContainerButton>\r\n\r\n            </ContainerBody>\r\n        </Container>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
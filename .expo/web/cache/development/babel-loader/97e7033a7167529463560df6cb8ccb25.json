{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"navigation\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport { getHeaderTitle, Header, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport { DrawerActions, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Reanimated from 'react-native-reanimated';\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\nimport DrawerPositionContext from \"../utils/DrawerPositionContext\";\nimport DrawerStatusContext from \"../utils/DrawerStatusContext\";\nimport getDrawerStatusFromState from \"../utils/getDrawerStatusFromState\";\nimport DrawerContent from \"./DrawerContent\";\nimport DrawerToggleButton from \"./DrawerToggleButton\";\nimport { GestureHandlerRootView } from \"./GestureHandler\";\nimport { MaybeScreen, MaybeScreenContainer } from \"./ScreenFallback\";\n\nvar getDefaultDrawerWidth = function getDefaultDrawerWidth(_ref) {\n  var height = _ref.height,\n      width = _ref.width;\n  var smallerAxisSize = Math.min(height, width);\n  var isLandscape = width > height;\n  var isTablet = smallerAxisSize >= 600;\n  var appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n  var maxWidth = isTablet ? 320 : 280;\n  return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n};\n\nvar GestureHandlerWrapper = GestureHandlerRootView != null ? GestureHandlerRootView : View;\n\nfunction DrawerViewBase(_ref2) {\n  var _Reanimated$isConfigu;\n\n  var state = _ref2.state,\n      navigation = _ref2.navigation,\n      descriptors = _ref2.descriptors,\n      defaultStatus = _ref2.defaultStatus,\n      _ref2$drawerContent = _ref2.drawerContent,\n      drawerContent = _ref2$drawerContent === void 0 ? function (props) {\n    return React.createElement(DrawerContent, props);\n  } : _ref2$drawerContent,\n      _ref2$detachInactiveS = _ref2.detachInactiveScreens,\n      detachInactiveScreens = _ref2$detachInactiveS === void 0 ? Platform.OS === 'web' || Platform.OS === 'android' || Platform.OS === 'ios' : _ref2$detachInactiveS,\n      _ref2$useLegacyImplem = _ref2.useLegacyImplementation,\n      useLegacyImplementation = _ref2$useLegacyImplem === void 0 ? !((_Reanimated$isConfigu = Reanimated.isConfigured) !== null && _Reanimated$isConfigu !== void 0 && _Reanimated$isConfigu.call(Reanimated)) : _ref2$useLegacyImplem;\n  var legacyImplemenationNotAvailable = require('react-native-reanimated').abs === undefined;\n\n  if (useLegacyImplementation && legacyImplemenationNotAvailable) {\n    throw new Error('The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.');\n  }\n\n  var Drawer = useLegacyImplementation ? require(\"./legacy/Drawer\").default : require(\"./modern/Drawer\").default;\n  var focusedRouteKey = state.routes[state.index].key;\n  var _descriptors$focusedR = descriptors[focusedRouteKey].options,\n      _descriptors$focusedR2 = _descriptors$focusedR.drawerHideStatusBarOnOpen,\n      drawerHideStatusBarOnOpen = _descriptors$focusedR2 === void 0 ? false : _descriptors$focusedR2,\n      _descriptors$focusedR3 = _descriptors$focusedR.drawerPosition,\n      drawerPosition = _descriptors$focusedR3 === void 0 ? I18nManager.getConstants().isRTL ? 'right' : 'left' : _descriptors$focusedR3,\n      _descriptors$focusedR4 = _descriptors$focusedR.drawerStatusBarAnimation,\n      drawerStatusBarAnimation = _descriptors$focusedR4 === void 0 ? 'slide' : _descriptors$focusedR4,\n      drawerStyle = _descriptors$focusedR.drawerStyle,\n      _descriptors$focusedR5 = _descriptors$focusedR.drawerType,\n      drawerType = _descriptors$focusedR5 === void 0 ? Platform.select({\n    ios: 'slide',\n    default: 'front'\n  }) : _descriptors$focusedR5,\n      gestureHandlerProps = _descriptors$focusedR.gestureHandlerProps,\n      _descriptors$focusedR6 = _descriptors$focusedR.keyboardDismissMode,\n      keyboardDismissMode = _descriptors$focusedR6 === void 0 ? 'on-drag' : _descriptors$focusedR6,\n      _descriptors$focusedR7 = _descriptors$focusedR.overlayColor,\n      overlayColor = _descriptors$focusedR7 === void 0 ? 'rgba(0, 0, 0, 0.5)' : _descriptors$focusedR7,\n      _descriptors$focusedR8 = _descriptors$focusedR.swipeEdgeWidth,\n      swipeEdgeWidth = _descriptors$focusedR8 === void 0 ? 32 : _descriptors$focusedR8,\n      _descriptors$focusedR9 = _descriptors$focusedR.swipeEnabled,\n      swipeEnabled = _descriptors$focusedR9 === void 0 ? Platform.OS !== 'web' && Platform.OS !== 'windows' && Platform.OS !== 'macos' : _descriptors$focusedR9,\n      _descriptors$focusedR10 = _descriptors$focusedR.swipeMinDistance,\n      swipeMinDistance = _descriptors$focusedR10 === void 0 ? 60 : _descriptors$focusedR10;\n\n  var _React$useState = React.useState([focusedRouteKey]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loaded = _React$useState2[0],\n      setLoaded = _React$useState2[1];\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([].concat(_toConsumableArray(loaded), [focusedRouteKey]));\n  }\n\n  var dimensions = useSafeAreaFrame();\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var drawerStatus = getDrawerStatusFromState(state);\n  var handleDrawerOpen = React.useCallback(function () {\n    navigation.dispatch(_objectSpread(_objectSpread({}, DrawerActions.openDrawer()), {}, {\n      target: state.key\n    }));\n  }, [navigation, state.key]);\n  var handleDrawerClose = React.useCallback(function () {\n    navigation.dispatch(_objectSpread(_objectSpread({}, DrawerActions.closeDrawer()), {}, {\n      target: state.key\n    }));\n  }, [navigation, state.key]);\n  React.useEffect(function () {\n    if (drawerStatus === defaultStatus || drawerType === 'permanent') {\n      return;\n    }\n\n    var handleHardwareBack = function handleHardwareBack() {\n      if (!navigation.isFocused()) {\n        return false;\n      }\n\n      if (defaultStatus === 'open') {\n        handleDrawerOpen();\n      } else {\n        handleDrawerClose();\n      }\n\n      return true;\n    };\n\n    var handleEscape = function handleEscape(e) {\n      if (e.key === 'Escape') {\n        handleHardwareBack();\n      }\n    };\n\n    var subscription = BackHandler.addEventListener('hardwareBackPress', handleHardwareBack);\n\n    if (Platform.OS === 'web') {\n      var _document, _document$body, _document$body$addEve;\n\n      (_document = document) === null || _document === void 0 ? void 0 : (_document$body = _document.body) === null || _document$body === void 0 ? void 0 : (_document$body$addEve = _document$body.addEventListener) === null || _document$body$addEve === void 0 ? void 0 : _document$body$addEve.call(_document$body, 'keyup', handleEscape);\n    }\n\n    return function () {\n      subscription.remove();\n\n      if (Platform.OS === 'web') {\n        var _document2, _document2$body, _document2$body$remov;\n\n        (_document2 = document) === null || _document2 === void 0 ? void 0 : (_document2$body = _document2.body) === null || _document2$body === void 0 ? void 0 : (_document2$body$remov = _document2$body.removeEventListener) === null || _document2$body$remov === void 0 ? void 0 : _document2$body$remov.call(_document2$body, 'keyup', handleEscape);\n      }\n    };\n  }, [defaultStatus, drawerStatus, drawerType, handleDrawerClose, handleDrawerOpen, navigation]);\n\n  var renderDrawerContent = function renderDrawerContent() {\n    return React.createElement(DrawerPositionContext.Provider, {\n      value: drawerPosition\n    }, drawerContent({\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors\n    }));\n  };\n\n  var renderSceneContent = function renderSceneContent() {\n    return React.createElement(MaybeScreenContainer, {\n      enabled: detachInactiveScreens,\n      hasTwoStates: true,\n      style: styles.content\n    }, state.routes.map(function (route, index) {\n      var descriptor = descriptors[route.key];\n      var _descriptor$options = descriptor.options,\n          _descriptor$options$l = _descriptor$options.lazy,\n          lazy = _descriptor$options$l === void 0 ? true : _descriptor$options$l,\n          unmountOnBlur = _descriptor$options.unmountOnBlur;\n      var isFocused = state.index === index;\n\n      if (unmountOnBlur && !isFocused) {\n        return null;\n      }\n\n      if (lazy && !loaded.includes(route.key) && !isFocused) {\n        return null;\n      }\n\n      var _descriptor$options2 = descriptor.options,\n          freezeOnBlur = _descriptor$options2.freezeOnBlur,\n          _descriptor$options2$ = _descriptor$options2.header,\n          header = _descriptor$options2$ === void 0 ? function (_ref3) {\n        var _options$headerLeft;\n\n        var layout = _ref3.layout,\n            options = _ref3.options;\n        return React.createElement(Header, _extends({}, options, {\n          layout: layout,\n          title: getHeaderTitle(options, route.name),\n          headerLeft: (_options$headerLeft = options.headerLeft) != null ? _options$headerLeft : function (props) {\n            return React.createElement(DrawerToggleButton, props);\n          }\n        }));\n      } : _descriptor$options2$,\n          headerShown = _descriptor$options2.headerShown,\n          headerStatusBarHeight = _descriptor$options2.headerStatusBarHeight,\n          headerTransparent = _descriptor$options2.headerTransparent,\n          sceneContainerStyle = _descriptor$options2.sceneContainerStyle;\n      return React.createElement(MaybeScreen, {\n        key: route.key,\n        style: [StyleSheet.absoluteFill, {\n          zIndex: isFocused ? 0 : -1\n        }],\n        visible: isFocused,\n        enabled: detachInactiveScreens,\n        freezeOnBlur: freezeOnBlur\n      }, React.createElement(Screen, {\n        focused: isFocused,\n        route: descriptor.route,\n        navigation: descriptor.navigation,\n        headerShown: headerShown,\n        headerStatusBarHeight: headerStatusBarHeight,\n        headerTransparent: headerTransparent,\n        header: header({\n          layout: dimensions,\n          route: descriptor.route,\n          navigation: descriptor.navigation,\n          options: descriptor.options\n        }),\n        style: sceneContainerStyle\n      }, descriptor.render()));\n    }));\n  };\n\n  return React.createElement(DrawerStatusContext.Provider, {\n    value: drawerStatus\n  }, React.createElement(Drawer, {\n    open: drawerStatus !== 'closed',\n    onOpen: handleDrawerOpen,\n    onClose: handleDrawerClose,\n    gestureHandlerProps: gestureHandlerProps,\n    swipeEnabled: swipeEnabled,\n    swipeEdgeWidth: swipeEdgeWidth,\n    swipeVelocityThreshold: 500,\n    swipeDistanceThreshold: swipeMinDistance,\n    hideStatusBarOnOpen: drawerHideStatusBarOnOpen,\n    statusBarAnimation: drawerStatusBarAnimation,\n    keyboardDismissMode: keyboardDismissMode,\n    drawerType: drawerType,\n    drawerPosition: drawerPosition,\n    drawerStyle: [{\n      width: getDefaultDrawerWidth(dimensions),\n      backgroundColor: colors.card\n    }, drawerType === 'permanent' && (drawerPosition === 'left' ? {\n      borderRightColor: colors.border,\n      borderRightWidth: StyleSheet.hairlineWidth\n    } : {\n      borderLeftColor: colors.border,\n      borderLeftWidth: StyleSheet.hairlineWidth\n    }), drawerStyle],\n    overlayStyle: {\n      backgroundColor: overlayColor\n    },\n    renderDrawerContent: renderDrawerContent,\n    renderSceneContent: renderSceneContent,\n    dimensions: dimensions\n  }));\n}\n\nexport default function DrawerView(_ref4) {\n  var navigation = _ref4.navigation,\n      rest = _objectWithoutProperties(_ref4, _excluded);\n\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(GestureHandlerWrapper, {\n    style: styles.content\n  }, React.createElement(DrawerViewBase, _extends({\n    navigation: navigation\n  }, rest))));\n}\nvar styles = StyleSheet.create({\n  content: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","Header","SafeAreaProviderCompat","Screen","DrawerActions","useTheme","React","Reanimated","useSafeAreaFrame","DrawerPositionContext","DrawerStatusContext","getDrawerStatusFromState","DrawerContent","DrawerToggleButton","GestureHandlerRootView","MaybeScreen","MaybeScreenContainer","getDefaultDrawerWidth","height","_ref","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","Platform","OS","maxWidth","GestureHandlerWrapper","View","DrawerViewBase","_ref2","state","navigation","descriptors","defaultStatus","drawerContent","props","detachInactiveScreens","useLegacyImplementation","isConfigured","_Reanimated$isConfigu","legacyImplemenationNotAvailable","require","abs","undefined","Error","Drawer","default","focusedRouteKey","routes","index","key","options","drawerHideStatusBarOnOpen","drawerPosition","I18nManager","getConstants","isRTL","drawerStatusBarAnimation","drawerStyle","drawerType","select","ios","gestureHandlerProps","keyboardDismissMode","overlayColor","swipeEdgeWidth","swipeEnabled","swipeMinDistance","useState","loaded","setLoaded","includes","dimensions","colors","drawerStatus","handleDrawerOpen","useCallback","dispatch","openDrawer","target","handleDrawerClose","closeDrawer","useEffect","handleHardwareBack","isFocused","handleEscape","e","subscription","BackHandler","addEventListener","_document","body","_document$body","_document$body$addEve","remove","_document2","_document2$body","removeEventListener","_document2$body$remov","renderDrawerContent","Provider","value","renderSceneContent","enabled","hasTwoStates","style","styles","content","map","route","descriptor","lazy","unmountOnBlur","freezeOnBlur","header","layout","_ref3","_extends","title","name","headerLeft","headerShown","headerStatusBarHeight","headerTransparent","sceneContainerStyle","StyleSheet","absoluteFill","zIndex","visible","focused","render","open","onOpen","onClose","swipeVelocityThreshold","swipeDistanceThreshold","hideStatusBarOnOpen","statusBarAnimation","backgroundColor","card","borderRightColor","border","borderRightWidth","hairlineWidth","borderLeftColor","borderLeftWidth","overlayStyle","DrawerView","_ref4","rest","create","flex"],"sourceRoot":"../../src","sources":["DrawerView.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}